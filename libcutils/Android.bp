//
// Copyright (C) 2008 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// some files must not be compiled when building against Mingw
// they correspond to features not used by our host development tools
// which are also hard or even impossible to port to native Win32
libcutils_nonwindows_sources = [
    "android_get_control_file.cpp",
    "fs.c",
    "multiuser.c",
    "socket_inaddr_any_server_unix.c",
    "socket_local_client_unix.c",
    "socket_local_server_unix.c",
    "socket_network_client_unix.c",
    "sockets_unix.cpp",
    "str_parms.c",
]

cc_library_headers {
    name: "libcutils_headers",
    vendor_available: true,
    host_supported: true,
    export_include_dirs: ["include"],
    header_libs: ["liblog_headers"],
    export_header_lib_headers: ["liblog_headers"],
    target: {
        vendor: {
            export_include_dirs: ["include_vndk"],
        },
        linux_bionic: {
            enabled: true,
        },
        windows: {
            enabled: true,
        },
    },
}

cc_library {
    name: "libcutils",
    vendor_available: true,
    vndk: {
        enabled: true,
        support_system_process: true,
    },
    host_supported: true,
    srcs: [
        "config_utils.c",
        "fs_config.cpp",
        "canned_fs_config.c",
        "hashmap.c",
        "iosched_policy.c",
        "load_file.c",
        "native_handle.c",
        "open_memstream.c",
        "record_stream.c",
        "sched_policy.cpp",
        "sockets.cpp",
        "strdup16to8.c",
        "strdup8to16.c",
        "strlcpy.c",
        "threads.c",
    ],

    target: {
        host: {
            srcs: ["dlmalloc_stubs.c"],
        },
        linux_bionic: {
            enabled: true,
            exclude_srcs: ["dlmalloc_stubs.c"],
        },
        not_windows: {
            srcs: libcutils_nonwindows_sources + [
                "ashmem-host.c",
                "trace-host.c",
            ],
        },
        windows: {
            srcs: [
                "socket_inaddr_any_server_windows.c",
                "socket_network_client_windows.c",
                "sockets_windows.cpp",
            ],

            enabled: true,
            shared: {
                enabled: false,
            },
            cflags: [
                "-D_GNU_SOURCE",
            ],
        },

        android: {
            srcs: libcutils_nonwindows_sources + [
                "android_reboot.c",
                "ashmem-dev.c",
                "klog.cpp",
                "partition_utils.c",
                "properties.cpp",
                "qtaguid.c",
                "trace-dev.c",
                "uevent.c",
            ],
            sanitize: {
                misc_undefined: ["integer"],
            },
        },

        android_arm: {
            srcs: ["arch-arm/memset32.S"],
        },
        android_arm64: {
            srcs: ["arch-arm64/android_memset.S"],
        },

        android_mips: {
            srcs: ["arch-mips/android_memset.c"],
        },
        android_mips64: {
            srcs: ["arch-mips/android_memset.c"],
        },

        android_x86: {
            srcs: [
                "arch-x86/android_memset16.S",
                "arch-x86/android_memset32.S",
            ],
        },

        android_x86_64: {
            srcs: [
                "arch-x86_64/android_memset16.S",
                "arch-x86_64/android_memset32.S",
            ],
        },
    },

    shared_libs: ["liblog"],
    header_libs: [
        "libcutils_headers",
        "libutils_headers",
    ],
    export_header_lib_headers: ["libcutils_headers"],
    local_include_dirs: ["include"],

    cflags: [
        "-Werror",
        "-Wall",
        "-Wextra",
    ],
}

subdirs = ["tests"]
